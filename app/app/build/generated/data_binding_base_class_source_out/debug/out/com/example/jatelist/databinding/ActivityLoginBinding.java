// Generated by view binder compiler. Do not edit!
package com.example.jatelist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jatelist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final TextView appName;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final TextView appName2;

  @NonNull
  public final TextView espaOl;

  @NonNull
  public final TextView euskera;

  @NonNull
  public final ImageView imageView;

  @NonNull
  public final TextView ingles;

  @NonNull
  public final Button loginButton;

  @NonNull
  public final EditText password;

  @NonNull
  public final ImageButton signUp;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout-land/</li>
   * </ul>
   */
  @Nullable
  public final Toolbar toolbar;

  @NonNull
  public final EditText username;

  private ActivityLoginBinding(@NonNull ConstraintLayout rootView, @Nullable TextView appName,
      @Nullable TextView appName2, @NonNull TextView espaOl, @NonNull TextView euskera,
      @NonNull ImageView imageView, @NonNull TextView ingles, @NonNull Button loginButton,
      @NonNull EditText password, @NonNull ImageButton signUp, @Nullable Toolbar toolbar,
      @NonNull EditText username) {
    this.rootView = rootView;
    this.appName = appName;
    this.appName2 = appName2;
    this.espaOl = espaOl;
    this.euskera = euskera;
    this.imageView = imageView;
    this.ingles = ingles;
    this.loginButton = loginButton;
    this.password = password;
    this.signUp = signUp;
    this.toolbar = toolbar;
    this.username = username;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appName;
      TextView appName = ViewBindings.findChildViewById(rootView, id);

      id = R.id.appName2;
      TextView appName2 = ViewBindings.findChildViewById(rootView, id);

      id = R.id.espa√±ol;
      TextView espaOl = ViewBindings.findChildViewById(rootView, id);
      if (espaOl == null) {
        break missingId;
      }

      id = R.id.euskera;
      TextView euskera = ViewBindings.findChildViewById(rootView, id);
      if (euskera == null) {
        break missingId;
      }

      id = R.id.imageView;
      ImageView imageView = ViewBindings.findChildViewById(rootView, id);
      if (imageView == null) {
        break missingId;
      }

      id = R.id.ingles;
      TextView ingles = ViewBindings.findChildViewById(rootView, id);
      if (ingles == null) {
        break missingId;
      }

      id = R.id.loginButton;
      Button loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.password;
      EditText password = ViewBindings.findChildViewById(rootView, id);
      if (password == null) {
        break missingId;
      }

      id = R.id.signUp;
      ImageButton signUp = ViewBindings.findChildViewById(rootView, id);
      if (signUp == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);

      id = R.id.username;
      EditText username = ViewBindings.findChildViewById(rootView, id);
      if (username == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ConstraintLayout) rootView, appName, appName2, espaOl,
          euskera, imageView, ingles, loginButton, password, signUp, toolbar, username);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
