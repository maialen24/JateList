// Generated by view binder compiler. Do not edit!
package com.example.jatelist.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.jatelist.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SettingsDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final TextView modeT;

  @NonNull
  public final Switch modo;

  @NonNull
  public final CheckBox notiRecordatorio;

  @NonNull
  public final CheckBox notiRestaurant;

  @NonNull
  public final TextView notifications;

  private SettingsDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout linearLayout, @NonNull TextView modeT, @NonNull Switch modo,
      @NonNull CheckBox notiRecordatorio, @NonNull CheckBox notiRestaurant,
      @NonNull TextView notifications) {
    this.rootView = rootView;
    this.linearLayout = linearLayout;
    this.modeT = modeT;
    this.modo = modo;
    this.notiRecordatorio = notiRecordatorio;
    this.notiRestaurant = notiRestaurant;
    this.notifications = notifications;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingsDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingsDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.settings_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingsDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.modeT;
      TextView modeT = ViewBindings.findChildViewById(rootView, id);
      if (modeT == null) {
        break missingId;
      }

      id = R.id.modo;
      Switch modo = ViewBindings.findChildViewById(rootView, id);
      if (modo == null) {
        break missingId;
      }

      id = R.id.notiRecordatorio;
      CheckBox notiRecordatorio = ViewBindings.findChildViewById(rootView, id);
      if (notiRecordatorio == null) {
        break missingId;
      }

      id = R.id.notiRestaurant;
      CheckBox notiRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (notiRestaurant == null) {
        break missingId;
      }

      id = R.id.notifications;
      TextView notifications = ViewBindings.findChildViewById(rootView, id);
      if (notifications == null) {
        break missingId;
      }

      return new SettingsDialogBinding((ConstraintLayout) rootView, linearLayout, modeT, modo,
          notiRecordatorio, notiRestaurant, notifications);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
